name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.12

    - name: Build Docker Image
      run: docker build -t pytest_runner .

    - name: Create GCP Keys Directory
      run: mkdir -p /tmp/keys

    - name: Install jq
      run: sudo apt update && sudo apt install -y jq

    - name: Save GCP_SA_KEY to file
      run: echo '${{ secrets.GCP_SA_KEY }}' > /tmp/keys/GOOGLE_APPLICATION_CREDENTIALS.json

    - name: Run Tests in Docker
      run: |
        docker run --name data_quality_tests \
          -v /tmp/keys:/keys \
          -e GOOGLE_APPLICATION_CREDENTIALS=/keys/GOOGLE_APPLICATION_CREDENTIALS.json \
          -e GCS_BUCKET_NAME=${{ secrets.GCS_BUCKET_NAME }} \
          -e GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }} \
          -e BIGQUERY_DATASET_ID=${{ secrets.BIGQUERY_DATASET_ID }} \
          pytest_runner

    - name: Create Allure results directory
      if: always()
      run: mkdir -p test_results && sudo chmod -R 777 test_results

    - name: Copy Allure report from Docker container
      if: always()
      run: docker cp data_quality_tests:/tests_project/test_results ./test_results

    - name: Set up JDK 17
      if: always()
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install Allure CLI
      run: sudo apt-get install allure

    - name: Generate Allure Report
      if: always()
      run: allure generate ./test_results -o ./test_results/allure-report --clean

    - name: Deploy to GitHub Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.MY_GITHUB_TOKEN }}
        publish_dir: ./test_results/allure-report
