{"uid":"1984543bd6d92b","name":"test_app_names_platform_consistency","fullName":"tests.test_data_in_tables#test_app_names_platform_consistency","historyId":"833555ed795ee9548f45b8813ab9c4ff","time":{"start":1712447937633,"stop":1712447938443,"duration":810},"description":"\nПроверяет согласованность между именами приложений и платформами в таблицах app_names и device_segments. \nЭто обеспечивает, что каждое приложение и соответствующая платформа корректно отражены в обеих таблицах, \nподдерживая целостность данных.\n","descriptionHtml":"<p>Проверяет согласованность между именами приложений и платформами в таблицах app_names и device_segments.<br />\nЭто обеспечивает, что каждое приложение и соответствующая платформа корректно отражены в обеих таблицах,<br />\nподдерживая целостность данных.</p>\n","status":"failed","statusMessage":"AssertionError: Обнаружены несогласованные имена приложений или платформы между app_names и device_segments: app_name: gs_as, platform: as, app_name: hs_as, platform: as\nassert not [('gs_as', 'as'), ('hs_as', 'as')]","statusTrace":"setup = (<google.cloud.bigquery.client.Client object at 0x7f694f25d400>, <environment.Environment object at 0x7f694f25dbe0>)\n\n    @allure.story('Data_Tables_Creation')\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.description(\"\"\"\n    Проверяет согласованность между именами приложений и платформами в таблицах app_names и device_segments.\n    Это обеспечивает, что каждое приложение и соответствующая платформа корректно отражены в обеих таблицах,\n    поддерживая целостность данных.\n    \"\"\")\n    def test_app_names_platform_consistency(setup):\n        \"\"\"\n        Тест проверяет, что каждое имя приложения и соответствующая платформа из таблицы app_names\n        имеют соответствие в таблице device_segments.\n        \"\"\"\n        bq_client, env = setup\n        app_names = env.get_full_table_id('app_names')\n        device_segments = env.get_full_table_id('device_segments')\n    \n        # Запрос на проверку соответствия имен приложений и платформ между таблицами app_names и device_segments.\n        query = f\"\"\"\n            -- Запрос на проверку соответствия имен приложений и платформ между таблицами app_names и device_segments.\n            -- Используется LEFT JOIN для связи записей из app_names с соответствующими записями в device_segments.\n            -- Условие ON an.app_name = ds.app_short AND an.platform = ds.platform гарантирует, что сопоставление идет по обоим ключевым полям.\n            -- Условие WHERE ds.app_short IS NULL OR ds.platform IS NULL фильтрует те случаи, когда соответствующие записи в device_segments отсутствуют,\n            -- указывая на несогласованность между таблицами.\n            SELECT an.app_name, an.platform\n            FROM `{app_names}` an\n            LEFT JOIN `{device_segments}` ds ON an.app_name = ds.app_short AND an.platform = ds.platform\n            WHERE ds.app_short IS NULL OR ds.platform IS NULL\n        \"\"\"\n    \n        # Используем нашу вспомогательную функцию для выполнения запроса и логирования его в Allure.\n        inconsistencies = execute_query_and_log(bq_client, query,\n                                                \"Проверка согласованности имен приложений и платформ\",\n                                                include_query_in_message=True)\n    \n        # Преобразуем результаты запроса в список для удобства последующей проверки.\n        inconsistencies_details = [(row.app_name, row.platform) for row in inconsistencies]\n    \n        with allure.step(\"Проверка на отсутствие несогласованных имен приложений и платформ\"):\n>           assert not inconsistencies_details, \"Обнаружены несогласованные имена приложений или платформы между app_names и device_segments: \" + \\\n                                                \", \".join(f\"app_name: {app_name}, platform: {platform}\" for app_name, platform in\n                                                          inconsistencies_details)\nE           AssertionError: Обнаружены несогласованные имена приложений или платформы между app_names и device_segments: app_name: gs_as, platform: as, app_name: hs_as, platform: as\nE           assert not [('gs_as', 'as'), ('hs_as', 'as')]\n\ntests/test_data_in_tables.py:342: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1712447930177,"stop":1712447930179,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\nПроверяет согласованность между именами приложений и платформами в таблицах app_names и device_segments. \nЭто обеспечивает, что каждое приложение и соответствующая платформа корректно отражены в обеих таблицах, \nподдерживая целостность данных.\n","status":"failed","statusMessage":"AssertionError: Обнаружены несогласованные имена приложений или платформы между app_names и device_segments: app_name: gs_as, platform: as, app_name: hs_as, platform: as\nassert not [('gs_as', 'as'), ('hs_as', 'as')]","statusTrace":"setup = (<google.cloud.bigquery.client.Client object at 0x7f694f25d400>, <environment.Environment object at 0x7f694f25dbe0>)\n\n    @allure.story('Data_Tables_Creation')\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.description(\"\"\"\n    Проверяет согласованность между именами приложений и платформами в таблицах app_names и device_segments.\n    Это обеспечивает, что каждое приложение и соответствующая платформа корректно отражены в обеих таблицах,\n    поддерживая целостность данных.\n    \"\"\")\n    def test_app_names_platform_consistency(setup):\n        \"\"\"\n        Тест проверяет, что каждое имя приложения и соответствующая платформа из таблицы app_names\n        имеют соответствие в таблице device_segments.\n        \"\"\"\n        bq_client, env = setup\n        app_names = env.get_full_table_id('app_names')\n        device_segments = env.get_full_table_id('device_segments')\n    \n        # Запрос на проверку соответствия имен приложений и платформ между таблицами app_names и device_segments.\n        query = f\"\"\"\n            -- Запрос на проверку соответствия имен приложений и платформ между таблицами app_names и device_segments.\n            -- Используется LEFT JOIN для связи записей из app_names с соответствующими записями в device_segments.\n            -- Условие ON an.app_name = ds.app_short AND an.platform = ds.platform гарантирует, что сопоставление идет по обоим ключевым полям.\n            -- Условие WHERE ds.app_short IS NULL OR ds.platform IS NULL фильтрует те случаи, когда соответствующие записи в device_segments отсутствуют,\n            -- указывая на несогласованность между таблицами.\n            SELECT an.app_name, an.platform\n            FROM `{app_names}` an\n            LEFT JOIN `{device_segments}` ds ON an.app_name = ds.app_short AND an.platform = ds.platform\n            WHERE ds.app_short IS NULL OR ds.platform IS NULL\n        \"\"\"\n    \n        # Используем нашу вспомогательную функцию для выполнения запроса и логирования его в Allure.\n        inconsistencies = execute_query_and_log(bq_client, query,\n                                                \"Проверка согласованности имен приложений и платформ\",\n                                                include_query_in_message=True)\n    \n        # Преобразуем результаты запроса в список для удобства последующей проверки.\n        inconsistencies_details = [(row.app_name, row.platform) for row in inconsistencies]\n    \n        with allure.step(\"Проверка на отсутствие несогласованных имен приложений и платформ\"):\n>           assert not inconsistencies_details, \"Обнаружены несогласованные имена приложений или платформы между app_names и device_segments: \" + \\\n                                                \", \".join(f\"app_name: {app_name}, platform: {platform}\" for app_name, platform in\n                                                          inconsistencies_details)\nE           AssertionError: Обнаружены несогласованные имена приложений или платформы между app_names и device_segments: app_name: gs_as, platform: as, app_name: hs_as, platform: as\nE           assert not [('gs_as', 'as'), ('hs_as', 'as')]\n\ntests/test_data_in_tables.py:342: AssertionError","steps":[{"name":"Проверка согласованности имен приложений и платформ\n\nExecuted query:\n\n        -- Запрос на проверку соответствия имен приложений и платформ между таблицами app_names и device_segments.\n        -- Используется LEFT JOIN для связи записей из app_names с соответствующими записями в device_segments.\n        -- Условие ON an.app_name = ds.app_short AND an.platform = ds.platform гарантирует, что сопоставление идет по обоим ключевым полям.\n        -- Условие WHERE ds.app_short IS NULL OR ds.platform IS NULL фильтрует те случаи, когда соответствующие записи в device_segments отсутствуют,\n        -- указывая на несогласованность между таблицами.        \n        SELECT an.app_name, an.platform\n        FROM `data-quality-project-1.dq_data_set.app_names` an\n        LEFT JOIN `data-quality-project-1.dq_data_set.device_segments` ds ON an.app_name = ds.app_short AND an.platform = ds.platform\n        WHERE ds.app_short IS NULL OR ds.platform IS NULL\n    ","time":{"start":1712447937633,"stop":1712447938203,"duration":570},"status":"passed","steps":[],"attachments":[{"uid":"a33455176826473","name":"SQL Query","source":"a33455176826473.txt","type":"text/plain","size":1165}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},{"name":"Проверка на отсутствие несогласованных имен приложений и платформ","time":{"start":1712447938443,"stop":1712447938443,"duration":0},"status":"failed","statusMessage":"AssertionError: Обнаружены несогласованные имена приложений или платформы между app_names и device_segments: app_name: gs_as, platform: as, app_name: hs_as, platform: as\nassert not [('gs_as', 'as'), ('hs_as', 'as')]\n","statusTrace":"  File \"/tests_project/tests/test_data_in_tables.py\", line 342, in test_app_names_platform_consistency\n    assert not inconsistencies_details, \"Обнаружены несогласованные имена приложений или платформы между app_names и device_segments: \" + \\\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"story","value":"Data_Tables_Creation"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_data_in_tables"},{"name":"host","value":"ef1f00ca1273"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_data_in_tables"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"1984543bd6d92b.json","parameterValues":[]}