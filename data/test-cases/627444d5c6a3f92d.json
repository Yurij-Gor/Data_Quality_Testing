{"uid":"627444d5c6a3f92d","name":"test_undefined_device_model_installs","fullName":"tests.test_v_agg_data_additional#test_undefined_device_model_installs","historyId":"806e94d9ae03ace3b161dce632349bf8","time":{"start":1729090977781,"stop":1729090979403,"duration":1622},"description":"\nТест проверяет наличие установок приложений с неопределенной моделью устройства в представлении v_agg_data.\n","descriptionHtml":"<p>Тест проверяет наличие установок приложений с неопределенной моделью устройства в представлении v_agg_data.</p>\n","status":"failed","statusMessage":"AssertionError: Обнаружены установки приложений с неопределенной моделью устройства:\n  Приложение: fd_gp, Количество установок: 1\n  Приложение: hs_as, Количество установок: 8\n  \nassert False","statusTrace":"setup = (<google.cloud.bigquery.client.Client object at 0x7f060b9b00b0>, <environment.Environment object at 0x7f060b9b3860>)\n\n    @allure.story('View_Creation')\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.description(\"\"\"\n    Тест проверяет наличие установок приложений с неопределенной моделью устройства в представлении v_agg_data.\n    \"\"\")\n    def test_undefined_device_model_installs(setup):\n        \"\"\"\n        Тестирование наличия установок приложений с неопределенной моделью устройства.\n        \"\"\"\n        bq_client, env = setup\n        v_agg_data = env.get_full_table_id('v_agg_data')\n    \n        # Сформируем запрос для выборки имен приложений и подсчета установок, где модель устройства не указана или является пустой строкой.\n        query = f\"\"\"\n            -- Выборка имен приложений и подсчет установок, где модель устройства не указана или пустая строка\n            SELECT app_name, COUNT(*) as total_installs\n            FROM `{v_agg_data}`\n            WHERE device_model IS NULL OR device_model = ''\n            GROUP BY app_name\n        \"\"\"\n    \n        # Используем вспомогательную функцию для выполнения запроса и логирования его в Allure.\n        results = execute_query_and_log(bq_client, query, \"Поиск установок с неопределенной моделью устройства\",\n                                        include_query_in_message=False)\n    \n        # Преобразуем результаты запроса в список кортежей для дальнейшего анализа.\n        undefined_device_model_installs = [(row.app_name, row.total_installs) for row in results]\n    \n        # Если найдены установки с неопределенной моделью устройства, составляем сообщение об ошибке с деталями.\n        if len(undefined_device_model_installs) > 0:\n            error_message = \"Обнаружены установки приложений с неопределенной моделью устройства:\\n\"\n            for app_name, total_installs in undefined_device_model_installs:\n                error_message += f\"Приложение: {app_name}, Количество установок: {total_installs}\\n\"\n>           assert False, error_message\nE           AssertionError: Обнаружены установки приложений с неопределенной моделью устройства:\nE             Приложение: fd_gp, Количество установок: 1\nE             Приложение: hs_as, Количество установок: 8\nE             \nE           assert False\n\ntests/test_v_agg_data_additional.py:153: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1729090973755,"stop":1729090973756,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\nТест проверяет наличие установок приложений с неопределенной моделью устройства в представлении v_agg_data.\n","status":"failed","statusMessage":"AssertionError: Обнаружены установки приложений с неопределенной моделью устройства:\n  Приложение: fd_gp, Количество установок: 1\n  Приложение: hs_as, Количество установок: 8\n  \nassert False","statusTrace":"setup = (<google.cloud.bigquery.client.Client object at 0x7f060b9b00b0>, <environment.Environment object at 0x7f060b9b3860>)\n\n    @allure.story('View_Creation')\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.description(\"\"\"\n    Тест проверяет наличие установок приложений с неопределенной моделью устройства в представлении v_agg_data.\n    \"\"\")\n    def test_undefined_device_model_installs(setup):\n        \"\"\"\n        Тестирование наличия установок приложений с неопределенной моделью устройства.\n        \"\"\"\n        bq_client, env = setup\n        v_agg_data = env.get_full_table_id('v_agg_data')\n    \n        # Сформируем запрос для выборки имен приложений и подсчета установок, где модель устройства не указана или является пустой строкой.\n        query = f\"\"\"\n            -- Выборка имен приложений и подсчет установок, где модель устройства не указана или пустая строка\n            SELECT app_name, COUNT(*) as total_installs\n            FROM `{v_agg_data}`\n            WHERE device_model IS NULL OR device_model = ''\n            GROUP BY app_name\n        \"\"\"\n    \n        # Используем вспомогательную функцию для выполнения запроса и логирования его в Allure.\n        results = execute_query_and_log(bq_client, query, \"Поиск установок с неопределенной моделью устройства\",\n                                        include_query_in_message=False)\n    \n        # Преобразуем результаты запроса в список кортежей для дальнейшего анализа.\n        undefined_device_model_installs = [(row.app_name, row.total_installs) for row in results]\n    \n        # Если найдены установки с неопределенной моделью устройства, составляем сообщение об ошибке с деталями.\n        if len(undefined_device_model_installs) > 0:\n            error_message = \"Обнаружены установки приложений с неопределенной моделью устройства:\\n\"\n            for app_name, total_installs in undefined_device_model_installs:\n                error_message += f\"Приложение: {app_name}, Количество установок: {total_installs}\\n\"\n>           assert False, error_message\nE           AssertionError: Обнаружены установки приложений с неопределенной моделью устройства:\nE             Приложение: fd_gp, Количество установок: 1\nE             Приложение: hs_as, Количество установок: 8\nE             \nE           assert False\n\ntests/test_v_agg_data_additional.py:153: AssertionError","steps":[{"name":"Поиск установок с неопределенной моделью устройства","time":{"start":1729090977781,"stop":1729090979402,"duration":1621},"status":"passed","steps":[],"attachments":[{"uid":"8243e6f6ffcc0690","name":"SQL Query","source":"8243e6f6ffcc0690.txt","type":"text/plain","size":388},{"uid":"66b7f0184848ee","name":"SQL Results","source":"66b7f0184848ee.json","type":"application/json","size":142}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"story","value":"View_Creation"},{"name":"severity","value":"normal"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_v_agg_data_additional"},{"name":"host","value":"1df2447b9ce9"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_v_agg_data_additional"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"627444d5c6a3f92d.json","parameterValues":[]}