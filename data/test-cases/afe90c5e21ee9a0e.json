{"uid":"afe90c5e21ee9a0e","name":"test_device_models_match","fullName":"tests.test_data_in_tables#test_device_models_match","historyId":"364c1e7e944c89d4872de65ca194dabd","time":{"start":1712486030944,"stop":1712486032476,"duration":1532},"description":"\nПроверяет, что все модели устройств из таблицы agg_data имеют соответствующие записи в таблице device_segments.\nИспользует функцию UPPER() для игнорирования регистра символов.\n","descriptionHtml":"<p>Проверяет, что все модели устройств из таблицы agg_data имеют соответствующие записи в таблице device_segments.<br />\nИспользует функцию UPPER() для игнорирования регистра символов.</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1712486030942,"stop":1712486030943,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\nПроверяет, что все модели устройств из таблицы agg_data имеют соответствующие записи в таблице device_segments.\nИспользует функцию UPPER() для игнорирования регистра символов.\n","status":"passed","steps":[{"name":"Проверка соответствия моделей устройств\n\nExecuted query:\n\n        -- Выбор уникальных моделей устройств из таблицы agg_data после приведения их к верхнему регистру\n        SELECT DISTINCT UPPER(agg.device_model) AS device_model_upper\n        -- Указание таблицы agg_data, из которой будут выбираться данные, с использованием псевдонима 'agg'\n        FROM `data-quality-project-1.dq_data_set.agg_data` agg\n        -- Отбор моделей устройств, которых нет в таблице device_segments\n        WHERE UPPER(agg.device_model) NOT IN (\n          -- Подзапрос для выбора уникальных моделей устройств из таблицы device_segments после приведения их к верхнему регистру\n          SELECT DISTINCT UPPER(ds.device_model)\n          -- Указание таблицы device_segments, из которой будут выбираться данные для подзапроса, с использованием псевдонима 'ds'\n          FROM `data-quality-project-1.dq_data_set.device_segments` ds\n        )\n    ","time":{"start":1712486030944,"stop":1712486032091,"duration":1147},"status":"passed","steps":[],"attachments":[{"uid":"80481ab040765ae3","name":"SQL Query","source":"80481ab040765ae3.txt","type":"text/plain","size":1217}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"story","value":"Data_Tables_Creation"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_data_in_tables"},{"name":"host","value":"8d3096653900"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_data_in_tables"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[],"tags":[]},"source":"afe90c5e21ee9a0e.json","parameterValues":[]}