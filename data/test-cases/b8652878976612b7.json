{"uid":"b8652878976612b7","name":"test_no_duplicates_in_view","fullName":"tests.test_v_agg_data#test_no_duplicates_in_view","historyId":"bb4269bf5926ad18419616c5fcdbfc41","time":{"start":1713123656892,"stop":1713123658158,"duration":1266},"description":"\nПроверяет отсутствие дубликатов в представлении v_agg_data. Дубликаты могут указывать на проблемы в процессе сбора или обработки данных.\n","descriptionHtml":"<p>Проверяет отсутствие дубликатов в представлении v_agg_data. Дубликаты могут указывать на проблемы в процессе сбора или обработки данных.</p>\n","status":"failed","statusMessage":"AssertionError: Найдены дубликаты в вьюхе:\n  Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-03-26, Установки: 20, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-02-26, Установки: 70, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-04-26, Установки: 320, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-07-26, Установки: 2550, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-12-31, Установки: 20, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: gs_as, Модель устройства: iphone 7, Дата установки: 2020-06-26, Установки: 80, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: hs_as, Модель устройства: iphone 7, Дата установки: 2020-07-26, Установки: 20, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: hs_as, Модель устройства: None, Дата установки: 2020-10-26, Установки: 870, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: hs_as, Модель устройства: iphone 13, Дата установки: 2020-04-26, Установки: 430, Сегмент устройства: non_target_device, Количество: 8\nassert 9 == 0\n +  where 9 = len([('fd_as', 'iphone 7', datetime.date(2020, 3, 26), 20, 'non_target_device', 8), ('fd_as', 'iphone 7', datetime.date(2020, 2, 26), 70, 'non_target_device', 8), ('fd_as', 'iphone 7', datetime.date(2020, 4, 26), 320, 'non_target_device', 8), ('fd_as', 'iphone 7', datetime.date(2020, 7, 26), 2550, 'non_target_device', 8), ('fd_as', 'iphone 7', datetime.date(2020, 12, 31), 20, 'non_target_device', 8), ('gs_as', 'iphone 7', datetime.date(2020, 6, 26), 80, 'non_target_device', 8), ...])","statusTrace":"setup = (<google.cloud.bigquery.client.Client object at 0x7fc3621c0260>, <environment.Environment object at 0x7fc3621c3650>)\n\n    @allure.story('View_Creation')\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.description(\"\"\"\n    Проверяет отсутствие дубликатов в представлении v_agg_data. Дубликаты могут указывать на проблемы в процессе сбора или обработки данных.\n    \"\"\")\n    def test_no_duplicates_in_view(setup):\n        \"\"\"\n        Проверка на отсутствие дубликатов в вьюхе v_agg_data.\n        \"\"\"\n        bq_client, env = setup  # Распаковываем возвращаемые значения фикстуры\n        v_agg_data = env.get_full_table_id('v_agg_data')  # Получаем полный ID таблицы v_agg_data\n    \n        # Формируем SQL запрос для проверки наличия дубликатов в данных\n        query = f\"\"\"\n            SELECT app_name, device_model, install_date, installs, device_segment, COUNT(*) as cnt\n            FROM `{v_agg_data}`  -- Из представления v_agg_data\n            GROUP BY app_name, device_model, install_date, installs, device_segment  -- Группировка по ключевым полям\n            HAVING cnt > 1  -- Условие для отбора групп с количеством записей больше одной (дубликаты)\n        \"\"\"\n    \n        # Используем вспомогательную функцию для выполнения SQL-запроса и логирования в Allure\n        results = execute_query_and_log(bq_client, query,\n                                        \"Проверка наличия дубликатов в представлении v_agg_data\",\n                                        include_query_in_message=False)\n    \n        # Собираем найденные дубликаты в список для удобства отображения в сообщении об ошибке\n        duplicate_records = []\n        with allure.step(\"Сбор информации о найденных дубликатах\"):\n            for row in results:\n                duplicate_records.append(\n                    (row.app_name, row.device_model, row.install_date, row.installs, row.device_segment, row.cnt))\n    \n        # Проверяем, что список найденных дубликатов пуст, иначе фиксируем нарушение\n        with allure.step(\"Проверка, что дубликаты отсутствуют\"):\n>           assert len(duplicate_records) == 0, \"Найдены дубликаты в вьюхе:\\n\" + \"\\n\".join(\n                f\"Приложение: {record[0]}, Модель устройства: {record[1]}, Дата установки: {record[2]}, Установки: {record[3]}, Сегмент устройства: {record[4]}, Количество: {record[5]}\"\n                for record in duplicate_records\n            )\nE           AssertionError: Найдены дубликаты в вьюхе:\nE             Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-03-26, Установки: 20, Сегмент устройства: non_target_device, Количество: 8\nE             Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-02-26, Установки: 70, Сегмент устройства: non_target_device, Количество: 8\nE             Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-04-26, Установки: 320, Сегмент устройства: non_target_device, Количество: 8\nE             Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-07-26, Установки: 2550, Сегмент устройства: non_target_device, Количество: 8\nE             Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-12-31, Установки: 20, Сегмент устройства: non_target_device, Количество: 8\nE             Приложение: gs_as, Модель устройства: iphone 7, Дата установки: 2020-06-26, Установки: 80, Сегмент устройства: non_target_device, Количество: 8\nE             Приложение: hs_as, Модель устройства: iphone 7, Дата установки: 2020-07-26, Установки: 20, Сегмент устройства: non_target_device, Количество: 8\nE             Приложение: hs_as, Модель устройства: None, Дата установки: 2020-10-26, Установки: 870, Сегмент устройства: non_target_device, Количество: 8\nE             Приложение: hs_as, Модель устройства: iphone 13, Дата установки: 2020-04-26, Установки: 430, Сегмент устройства: non_target_device, Количество: 8\nE           assert 9 == 0\nE            +  where 9 = len([('fd_as', 'iphone 7', datetime.date(2020, 3, 26), 20, 'non_target_device', 8), ('fd_as', 'iphone 7', datetime.date(2020, 2, 26), 70, 'non_target_device', 8), ('fd_as', 'iphone 7', datetime.date(2020, 4, 26), 320, 'non_target_device', 8), ('fd_as', 'iphone 7', datetime.date(2020, 7, 26), 2550, 'non_target_device', 8), ('fd_as', 'iphone 7', datetime.date(2020, 12, 31), 20, 'non_target_device', 8), ('gs_as', 'iphone 7', datetime.date(2020, 6, 26), 80, 'non_target_device', 8), ...])\n\ntests/test_v_agg_data.py:128: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1713123652840,"stop":1713123652841,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\nПроверяет отсутствие дубликатов в представлении v_agg_data. Дубликаты могут указывать на проблемы в процессе сбора или обработки данных.\n","status":"failed","statusMessage":"AssertionError: Найдены дубликаты в вьюхе:\n  Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-03-26, Установки: 20, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-02-26, Установки: 70, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-04-26, Установки: 320, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-07-26, Установки: 2550, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-12-31, Установки: 20, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: gs_as, Модель устройства: iphone 7, Дата установки: 2020-06-26, Установки: 80, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: hs_as, Модель устройства: iphone 7, Дата установки: 2020-07-26, Установки: 20, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: hs_as, Модель устройства: None, Дата установки: 2020-10-26, Установки: 870, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: hs_as, Модель устройства: iphone 13, Дата установки: 2020-04-26, Установки: 430, Сегмент устройства: non_target_device, Количество: 8\nassert 9 == 0\n +  where 9 = len([('fd_as', 'iphone 7', datetime.date(2020, 3, 26), 20, 'non_target_device', 8), ('fd_as', 'iphone 7', datetime.date(2020, 2, 26), 70, 'non_target_device', 8), ('fd_as', 'iphone 7', datetime.date(2020, 4, 26), 320, 'non_target_device', 8), ('fd_as', 'iphone 7', datetime.date(2020, 7, 26), 2550, 'non_target_device', 8), ('fd_as', 'iphone 7', datetime.date(2020, 12, 31), 20, 'non_target_device', 8), ('gs_as', 'iphone 7', datetime.date(2020, 6, 26), 80, 'non_target_device', 8), ...])","statusTrace":"setup = (<google.cloud.bigquery.client.Client object at 0x7fc3621c0260>, <environment.Environment object at 0x7fc3621c3650>)\n\n    @allure.story('View_Creation')\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.description(\"\"\"\n    Проверяет отсутствие дубликатов в представлении v_agg_data. Дубликаты могут указывать на проблемы в процессе сбора или обработки данных.\n    \"\"\")\n    def test_no_duplicates_in_view(setup):\n        \"\"\"\n        Проверка на отсутствие дубликатов в вьюхе v_agg_data.\n        \"\"\"\n        bq_client, env = setup  # Распаковываем возвращаемые значения фикстуры\n        v_agg_data = env.get_full_table_id('v_agg_data')  # Получаем полный ID таблицы v_agg_data\n    \n        # Формируем SQL запрос для проверки наличия дубликатов в данных\n        query = f\"\"\"\n            SELECT app_name, device_model, install_date, installs, device_segment, COUNT(*) as cnt\n            FROM `{v_agg_data}`  -- Из представления v_agg_data\n            GROUP BY app_name, device_model, install_date, installs, device_segment  -- Группировка по ключевым полям\n            HAVING cnt > 1  -- Условие для отбора групп с количеством записей больше одной (дубликаты)\n        \"\"\"\n    \n        # Используем вспомогательную функцию для выполнения SQL-запроса и логирования в Allure\n        results = execute_query_and_log(bq_client, query,\n                                        \"Проверка наличия дубликатов в представлении v_agg_data\",\n                                        include_query_in_message=False)\n    \n        # Собираем найденные дубликаты в список для удобства отображения в сообщении об ошибке\n        duplicate_records = []\n        with allure.step(\"Сбор информации о найденных дубликатах\"):\n            for row in results:\n                duplicate_records.append(\n                    (row.app_name, row.device_model, row.install_date, row.installs, row.device_segment, row.cnt))\n    \n        # Проверяем, что список найденных дубликатов пуст, иначе фиксируем нарушение\n        with allure.step(\"Проверка, что дубликаты отсутствуют\"):\n>           assert len(duplicate_records) == 0, \"Найдены дубликаты в вьюхе:\\n\" + \"\\n\".join(\n                f\"Приложение: {record[0]}, Модель устройства: {record[1]}, Дата установки: {record[2]}, Установки: {record[3]}, Сегмент устройства: {record[4]}, Количество: {record[5]}\"\n                for record in duplicate_records\n            )\nE           AssertionError: Найдены дубликаты в вьюхе:\nE             Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-03-26, Установки: 20, Сегмент устройства: non_target_device, Количество: 8\nE             Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-02-26, Установки: 70, Сегмент устройства: non_target_device, Количество: 8\nE             Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-04-26, Установки: 320, Сегмент устройства: non_target_device, Количество: 8\nE             Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-07-26, Установки: 2550, Сегмент устройства: non_target_device, Количество: 8\nE             Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-12-31, Установки: 20, Сегмент устройства: non_target_device, Количество: 8\nE             Приложение: gs_as, Модель устройства: iphone 7, Дата установки: 2020-06-26, Установки: 80, Сегмент устройства: non_target_device, Количество: 8\nE             Приложение: hs_as, Модель устройства: iphone 7, Дата установки: 2020-07-26, Установки: 20, Сегмент устройства: non_target_device, Количество: 8\nE             Приложение: hs_as, Модель устройства: None, Дата установки: 2020-10-26, Установки: 870, Сегмент устройства: non_target_device, Количество: 8\nE             Приложение: hs_as, Модель устройства: iphone 13, Дата установки: 2020-04-26, Установки: 430, Сегмент устройства: non_target_device, Количество: 8\nE           assert 9 == 0\nE            +  where 9 = len([('fd_as', 'iphone 7', datetime.date(2020, 3, 26), 20, 'non_target_device', 8), ('fd_as', 'iphone 7', datetime.date(2020, 2, 26), 70, 'non_target_device', 8), ('fd_as', 'iphone 7', datetime.date(2020, 4, 26), 320, 'non_target_device', 8), ('fd_as', 'iphone 7', datetime.date(2020, 7, 26), 2550, 'non_target_device', 8), ('fd_as', 'iphone 7', datetime.date(2020, 12, 31), 20, 'non_target_device', 8), ('gs_as', 'iphone 7', datetime.date(2020, 6, 26), 80, 'non_target_device', 8), ...])\n\ntests/test_v_agg_data.py:128: AssertionError","steps":[{"name":"Проверка наличия дубликатов в представлении v_agg_data","time":{"start":1713123656893,"stop":1713123658157,"duration":1264},"status":"passed","steps":[],"attachments":[{"uid":"2cba48f62e269f04","name":"SQL Query","source":"2cba48f62e269f04.txt","type":"text/plain","size":507},{"uid":"1e93e7cdd2f8b7f6","name":"SQL Results","source":"1e93e7cdd2f8b7f6.json","type":"application/json","size":1838}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},{"name":"Сбор информации о найденных дубликатах","time":{"start":1713123658158,"stop":1713123658158,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверка, что дубликаты отсутствуют","time":{"start":1713123658158,"stop":1713123658158,"duration":0},"status":"failed","statusMessage":"AssertionError: Найдены дубликаты в вьюхе:\n  Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-03-26, Установки: 20, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-02-26, Установки: 70, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-04-26, Установки: 320, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-07-26, Установки: 2550, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: fd_as, Модель устройства: iphone 7, Дата установки: 2020-12-31, Установки: 20, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: gs_as, Модель устройства: iphone 7, Дата установки: 2020-06-26, Установки: 80, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: hs_as, Модель устройства: iphone 7, Дата установки: 2020-07-26, Установки: 20, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: hs_as, Модель устройства: None, Дата установки: 2020-10-26, Установки: 870, Сегмент устройства: non_target_device, Количество: 8\n  Приложение: hs_as, Модель устройства: iphone 13, Дата установки: 2020-04-26, Установки: 430, Сегмент устройства: non_target_device, Количество: 8\nassert 9 == 0\n +  where 9 = len([('fd_as', 'iphone 7', datetime.date(2020, 3, 26), 20, 'non_target_device', 8), ('fd_as', 'iphone 7', datetime.date(2020, 2, 26), 70, 'non_target_device', 8), ('fd_as', 'iphone 7', datetime.date(2020, 4, 26), 320, 'non_target_device', 8), ('fd_as', 'iphone 7', datetime.date(2020, 7, 26), 2550, 'non_target_device', 8), ('fd_as', 'iphone 7', datetime.date(2020, 12, 31), 20, 'non_target_device', 8), ('gs_as', 'iphone 7', datetime.date(2020, 6, 26), 80, 'non_target_device', 8), ...])\n","statusTrace":"  File \"/tests_project/tests/test_v_agg_data.py\", line 128, in test_no_duplicates_in_view\n    assert len(duplicate_records) == 0, \"Найдены дубликаты в вьюхе:\\n\" + \"\\n\".join(\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"story","value":"View_Creation"},{"name":"severity","value":"normal"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_v_agg_data"},{"name":"host","value":"92770aead414"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_v_agg_data"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b8652878976612b7.json","parameterValues":[]}